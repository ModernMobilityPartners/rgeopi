% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geopi_extract_sf.R
\name{get_geopi}
\alias{get_geopi}
\title{get_geopi}
\usage{
get_geopi(
  gdot_pi,
  session = NULL,
  features = c("overview", "phases", "documents"),
  doc_mode = c("cr_only", "cr_check", "doc_summary"),
  geometry = FALSE
)
}
\arguments{
\item{gdot_pi}{GDOT Project ID. Can take a list or vector of IDs.}

\item{session}{If NULL (the default), creates a new session. Can provide a session made with `polite::bow`. In line with polite/ethical scraping, you can use an existing session or the function will create one for you.}

\item{features}{Project features desired to retrieve. Can choose between "overview" (project name, description, etc.), "phases" (phases, their years, and money allocated), and "documents" (information about what documents GeoPI has for the project).}

\item{doc_mode}{If "documents" is chosen, the doc_mode conveys what information to retrieve. Options are "cr_only" (description of all files under "approved concept reports"), "cr_check" (simple TRUE/FALSE for if the project has approved concept reports), and "doc_summary" (the name, file path, and type of all project documents).}

\item{geometry}{if FALSE (the default), do not return spatial date. if TRUE, uses the `get_geopi_sf` function to add a sf tibble named "geometry" to the output list.}
}
\value{
a list of tibbles
}
\description{
Get the available GeoPI data for a project. Adds the field `Gather.Date` with the current date to document the date of extraction.
}
\examples{
\dontrun{
get_geopi(gdot_pi = "0000820", doc_mode = "cr_check")
}
}
